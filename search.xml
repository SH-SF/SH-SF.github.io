<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[利用rip寄存器实现循环]]></title>
      <url>/posts/73ea24f2/</url>
      <content type="html"><![CDATA[<p>想要循环调用一个函数，其实有很多种方法，除了以下常见实现方式（for ,while），还可以通过修改rip寄存器来实现循环，文章末尾会介绍具体的案例。</p>
<h2 id="常见循环实现"><a href="#常见循环实现" class="headerlink" title="常见循环实现"></a>常见循环实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. for</span></span><br><span class="line"><span class="keyword">for</span> (;;) &#123;</span><br><span class="line">    loop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. while</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    loop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. do while</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    loop();</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. goto</span></span><br><span class="line">label:</span><br><span class="line">    loop();</span><br><span class="line">    <span class="keyword">goto</span> label;</span><br></pre></td></tr></table></figure>
<h2 id="rip实现循环"><a href="#rip实现循环" class="headerlink" title="rip实现循环"></a>rip实现循环</h2><p>先来看一段代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// loop.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> i = <span class="number">111</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"in loop: %p\n"</span>, &amp;i);</span><br><span class="line">    <span class="comment">// 关键代码</span></span><br><span class="line">    *(&amp;i+<span class="number">2</span>) -= <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> i = <span class="number">110</span>;</span><br><span class="line">    loop();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"before loop: %p\n"</span>, &amp;i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 执行</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> clang loop.c</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./a.out</span></span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">in loop: 0x7ffee225f848</span><br><span class="line">^C</span><br></pre></td></tr></table></figure>
<p>为什么会出现这种效果？让我们先了解一下程序的执行过程。</p>
<h3 id="运行时栈"><a href="#运行时栈" class="headerlink" title="运行时栈"></a>运行时栈</h3><p>main函数中调用loop，调用堆栈如下图所示：<br><img src="https://i.loli.net/2019/12/24/Orp843FZzL5yIoY.jpg" alt="stack _1_.jpg"><br>在main函数的栈帧中可以看到，会将loop函数（例子中没有参数）参数入栈，随后保存PC（即main中printf的地址）。通过call指令实现将PC值push到栈中，并将PC设置为loop函数的地址。loop执行后调用ret指令，从栈中保存的返回地址恢复到PC中，从而main函数继续执行。</p>
<blockquote>
<p>PC (program counter), 程序计数器，在x86-64中，用%rip寄存器表示。<br>The instruction pointer register points to the memory address which the processor will next attempt to execute.</p>
</blockquote>
<h3 id="反汇编"><a href="#反汇编" class="headerlink" title="反汇编"></a>反汇编</h3><p>现在我们大致了解了程序执行时栈的变化过程，要想实现loop函数循环，只要将saved PC在栈中的值改为loop()这条指令的地址。接下来，让我们看看a.out的关键部分的反汇编代码。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> objdump反汇编a.out</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> objdump -D a.out &gt; a.obj</span></span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2019/12/24/FD198mlPCnTcBjS.png" alt="反汇编.png"></p>
<p>27行汇编 callq调用loop的时候，会将下一条指令（leaq）的地址写入栈中，同时将PC设置为loop的地址，实现调用loop的效果，callq和leaq的地址相差5，在loop函数中，我们可以通过变量i来寻找saved PC的在栈中的地址，从来达到loop返回后，继续执行loop的效果。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># &amp;i+<span class="number">2</span>是saved PC的地址</span><br><span class="line"># 只要将栈中的数据改为callq的地址即可</span><br><span class="line">*(&amp;i+<span class="number">2</span>) -= <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<h2 id="案例-go-defer实现"><a href="#案例-go-defer实现" class="headerlink" title="案例-go defer实现"></a>案例-go defer实现</h2><p>在函数ret之前，调用deferreturn，deferreturn会循环调用，检查defer函数是否全部调用完成。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">runtime.jmpdefer:</span><br><span class="line"> <span class="number">104f</span>890:   <span class="number">48</span> <span class="number">8b</span> <span class="number">54</span> <span class="number">24</span> <span class="number">08</span>  movq    <span class="number">8</span>(%rsp), %rdx</span><br><span class="line"> <span class="number">104f</span>895:   <span class="number">48</span> <span class="number">8b</span> <span class="number">5</span>c <span class="number">24</span> <span class="number">10</span>  movq    <span class="number">16</span>(%rsp), %rbx</span><br><span class="line"> <span class="number">104f</span>89a:   <span class="number">48</span> <span class="number">8</span>d <span class="number">63</span> f8     leaq    <span class="number">-8</span>(%rbx), %rsp</span><br><span class="line"> <span class="number">104f</span>89e:   <span class="number">48</span> <span class="number">8b</span> <span class="number">6</span>c <span class="number">24</span> f8  movq    <span class="number">-8</span>(%rsp), %rbp</span><br><span class="line"> <span class="number">104f</span>8a3:   <span class="number">48</span> <span class="number">83</span> <span class="number">2</span>c <span class="number">24</span> <span class="number">05</span>  subq    $<span class="number">5</span>, (%rsp)     <span class="comment">// 修改saved PC</span></span><br><span class="line"> 104f8a8:   48 8b 1a    movq    (%rdx), %rbx</span><br><span class="line"> <span class="number">104f</span>8ab:   ff e3   jmpq    *%rbx</span><br><span class="line"> <span class="number">104f</span>8ad:   cc  int3</span><br><span class="line"> <span class="number">104f</span>8ae:   cc  int3</span><br><span class="line"> <span class="number">104f</span>8af:   cc  int3</span><br><span class="line"></span><br><span class="line">runtime.deferreturn:</span><br><span class="line"> <span class="number">10264</span>a0:   <span class="number">48</span> <span class="number">83</span> ec <span class="number">48</span>     subq    $<span class="number">72</span>, %rsp</span><br><span class="line"> <span class="number">10264</span>a4:   <span class="number">48</span> <span class="number">89</span> <span class="number">6</span>c <span class="number">24</span> <span class="number">40</span>  movq    %rbp, <span class="number">64</span>(%rsp)</span><br><span class="line"> <span class="number">10264</span>a9:   <span class="number">48</span> <span class="number">8</span>d <span class="number">6</span>c <span class="number">24</span> <span class="number">40</span>  leaq    <span class="number">64</span>(%rsp), %rbp</span><br><span class="line"> <span class="number">10264</span>ae:   <span class="number">65</span> <span class="number">48</span> <span class="number">8b</span> <span class="number">04</span> <span class="number">25</span> a0 <span class="number">08</span> <span class="number">00</span> <span class="number">00</span>  movq    %gs:<span class="number">2208</span>, %rax</span><br><span class="line"> <span class="number">10264b</span>7:   <span class="number">48</span> <span class="number">8b</span> <span class="number">48</span> <span class="number">28</span>     movq    <span class="number">40</span>(%rax), %rcx</span><br><span class="line"> ...</span><br><span class="line"> <span class="number">1026534</span>:   <span class="number">48</span> <span class="number">8</span>d <span class="number">44</span> <span class="number">24</span> <span class="number">50</span>  leaq    <span class="number">80</span>(%rsp), %rax</span><br><span class="line"> <span class="number">1026539</span>:   <span class="number">48</span> <span class="number">89</span> <span class="number">44</span> <span class="number">24</span> <span class="number">38</span>  movq    %rax, <span class="number">56</span>(%rsp)</span><br><span class="line"> <span class="number">102653</span>e:   <span class="number">48</span> <span class="number">8b</span> <span class="number">44</span> <span class="number">24</span> <span class="number">20</span>  movq    <span class="number">32</span>(%rsp), %rax</span><br><span class="line"> <span class="number">1026543</span>:   <span class="number">48</span> <span class="number">89</span> <span class="number">04</span> <span class="number">24</span>     movq    %rax, (%rsp)</span><br><span class="line"> <span class="number">1026547</span>:   <span class="number">48</span> <span class="number">8b</span> <span class="number">44</span> <span class="number">24</span> <span class="number">38</span>  movq    <span class="number">56</span>(%rsp), %rax</span><br><span class="line"> <span class="number">102654</span>c:   <span class="number">48</span> <span class="number">89</span> <span class="number">44</span> <span class="number">24</span> <span class="number">08</span>  movq    %rax, <span class="number">8</span>(%rsp)</span><br><span class="line"> <span class="number">1026551</span>:   e8 <span class="number">3</span>a <span class="number">93</span> <span class="number">02</span> <span class="number">00</span>  callq   <span class="number">168762</span> &lt;runtime.jmpdefer&gt;</span><br><span class="line"> <span class="number">1026556</span>:   <span class="number">48</span> <span class="number">8b</span> <span class="number">6</span>c <span class="number">24</span> <span class="number">40</span>  movq    <span class="number">64</span>(%rsp), %rbp</span><br><span class="line"> <span class="number">102655b</span>:   <span class="number">48</span> <span class="number">83</span> c4 <span class="number">48</span>     addq    $<span class="number">72</span>, %rsp</span><br><span class="line"> <span class="number">102655f</span>:   c3  retq</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> cs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[go get代理]]></title>
      <url>/posts/7f6b281c/</url>
      <content type="html"><![CDATA[<p>平时在用go get命令下载依赖时，经常会遇到类似</p>
<blockquote>
<p>package google.golang.org/grpc/encoding/gzip: unrecognized import path “google.golang.org/grpc/encoding/gzip” (https fetch: Get <a href="https://google.golang.org/grpc/encoding/gzip?go-get=1" target="_blank" rel="external">https://google.golang.org/grpc/encoding/gzip?go-get=1</a>: dial tcp 216.239.37.1:443: i/o timeout)</p>
</blockquote>
<p>的问题，其实是这些资源被墙，所幸的是有很多使用代理的方式解决了这个问题。</p>
<p>以<em>google.golang.org/grpc/encoding/gzip</em>为例：</p>
<h2 id="设置git代理"><a href="#设置git代理" class="headerlink" title="设置git代理"></a>设置git代理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config [--global] http.proxy http://proxy.example.com:port</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> go get <span class="string">"google.golang.org/grpc/encoding/gzip"</span></span></span><br></pre></td></tr></table></figure>
<h2 id="shell环境变量"><a href="#shell环境变量" class="headerlink" title="shell环境变量"></a>shell环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> socks</span></span><br><span class="line">http_proxy=socks5://127.0.0.1:1080 go get "google.golang.org/grpc/encoding/zip"</span><br><span class="line"><span class="meta">#</span><span class="bash"> http</span></span><br><span class="line">http_proxy=http://127.0.0.1:1080 go get "google.golang.org/grpc/encoding/gzip"</span><br></pre></td></tr></table></figure>
<h2 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h2><p>那就直接<em>go get “google.golang.org/grpc/encoding/gzip”</em>吧</p>
]]></content>
      
        
        <tags>
            
            <tag> go </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[佛祖包邮，永无BUG]]></title>
      <url>/posts/24287160/</url>
      <content type="html"><![CDATA[<p>在知乎闲逛时看到某回答中有个”<strong>佛祖保佑，永无BUG</strong>“的注释，便想着何不在登陆linux时可以显示出来，并且加上金光闪闪的颜色。</p>
<p>修改/etc/motd文件，加入如下内容：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">^[[1;33m[1;01m[1;05m</span><br><span class="line">                            _ooOoo_</span><br><span class="line">                           o8888888o</span><br><span class="line">                           88" . "88</span><br><span class="line">                           (| -_- |)</span><br><span class="line">                           O\  =  /O</span><br><span class="line">                        ____/`---'\____</span><br><span class="line">                      .'  \\|     |//  `.</span><br><span class="line">                     /  \\|||  :  |||//  \</span><br><span class="line">                    /  _||||| -:- |||||-  \</span><br><span class="line">                    |   | \\\  -  /// |   |</span><br><span class="line">                    | \_|  ''\---/''  |   |</span><br><span class="line">                    \  .-\__  `-`  ___/-. /</span><br><span class="line">                  ___`. .'  /--.--\  `. . __</span><br><span class="line">               ."" '&lt;  `.___\_&lt;|&gt;_/___.'  &gt;'"".</span><br><span class="line">              | | :  `- \`.;`\ _ /`;.`/ - ` : | |</span><br><span class="line">              \  \ `-.   \_ __\ /__ _/   .-` /  /</span><br><span class="line">         ======`-.____`-.___\_____/___.-`____.-'======</span><br><span class="line">                            `=---='</span><br><span class="line">         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">                    佛祖保佑        永无BUG</span><br><span class="line">           佛曰:</span><br><span class="line">                  写字楼里写字间，写字间里程序员；</span><br><span class="line">                  程序人员写程序，又拿程序换酒钱。</span><br><span class="line">                  酒醒只在网上坐，酒醉还来网下眠；</span><br><span class="line">                  酒醉酒醒日复日，网上网下年复年。</span><br><span class="line">                  但愿老死电脑间，不愿鞠躬老板前；</span><br><span class="line">                  奔驰宝马贵者趣，公交自行程序员。</span><br><span class="line">                  别人笑我忒疯癫，我笑自己命太贱；</span><br><span class="line">                  不见满街漂亮妹，哪个归得程序员？</span><br><span class="line">^[[1;0m</span><br></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://p2dvxr53o.bkt.clouddn.com/fozubaoyou.gif" alt="fozubaoyou"></p>
]]></content>
      
        <categories>
            
            <category> Linux/Unix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/posts/4a17b156/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 我的杂谈 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
